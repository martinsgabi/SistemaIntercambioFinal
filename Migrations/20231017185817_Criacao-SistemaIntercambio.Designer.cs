// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaIntercambioFinal.Models;

#nullable disable

namespace SistemaIntercambioFinal.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20231017185817_Criacao-SistemaIntercambio")]
    partial class CriacaoSistemaIntercambio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaIntercambioFinal.Models.AgendamentoProfissional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_AgendamentoProfissional");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAgendamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataAgendamento");

                    b.Property<int>("HoraAgendamento")
                        .HasColumnType("int")
                        .HasColumnName("HoraAgendamento");

                    b.HasKey("Id");

                    b.ToTable("AgendamentoProfissional");
                });

            modelBuilder.Entity("SistemaIntercambioFinal.Models.AgendamentoViagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AgendamentoViagemId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanhiaAereaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAgendamentoViagem")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataAgendamentoViagem");

                    b.Property<int>("HoraAgendamentoViagem")
                        .HasColumnType("int")
                        .HasColumnName("HoraAgendamentoViagem");

                    b.HasKey("Id");

                    b.HasIndex("CompanhiaAereaId");

                    b.ToTable("AgendamentoViagem");
                });

            modelBuilder.Entity("SistemaIntercambioFinal.Models.CadastroDoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CpfCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cpf");

                    b.Property<DateTime>("DataDeNascimentoCliente")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataDeNascimento");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<int>("IdadeCliente")
                        .HasColumnType("int")
                        .HasColumnName("Idade");

                    b.Property<string>("NomeCompletoCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NomeCompleto");

                    b.Property<string>("RgCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Rg");

                    b.Property<string>("SexoCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Sexo");

                    b.Property<int>("TelefoneCliente")
                        .HasColumnType("int")
                        .HasColumnName("Telefone");

                    b.HasKey("Id");

                    b.ToTable("CadastroDoCliente");
                });

            modelBuilder.Entity("SistemaIntercambioFinal.Models.CadastroIntercambio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_CadastoIntercambio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DestinoIntercambioId")
                        .HasColumnType("int");

                    b.Property<int>("DuracaoIntercambioId")
                        .HasColumnType("int");

                    b.Property<int>("TipoIntercambioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinoIntercambioId");

                    b.HasIndex("DuracaoIntercambioId");

                    b.HasIndex("TipoIntercambioId");

                    b.ToTable("CadastroIntercambio");
                });

            modelBuilder.Entity("SistemaIntercambioFinal.Models.CompanhiaAerea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanhiaAereaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanhiaAereaDescricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CompanhiaAereaDescricao");

                    b.HasKey("Id");

                    b.ToTable("CompanhiaAerea");
                });

            modelBuilder.Entity("SistemaIntercambioFinal.Models.DestinoIntercambio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DestinoIntercambioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DestinoIntercambioDescricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DestinoIntercambioDescricao");

                    b.HasKey("Id");

                    b.ToTable("DestinoIntercambio");
                });

            modelBuilder.Entity("SistemaIntercambioFinal.Models.DuracaoIntercambio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DuracaoIntercambioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DuracaoIntercambioDescricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DuracaoIntercambioDescricao");

                    b.HasKey("Id");

                    b.ToTable("DuracaoIntercambio");
                });

            modelBuilder.Entity("SistemaIntercambioFinal.Models.TipoIntercambio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipoIntercambioId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TipoIntercambioDescricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipoIntercambioDescricao");

                    b.HasKey("Id");

                    b.ToTable("TipoIntercambio");
                });

            modelBuilder.Entity("SistemaIntercambioFinal.Models.AgendamentoViagem", b =>
                {
                    b.HasOne("SistemaIntercambioFinal.Models.CompanhiaAerea", "CompanhiaAerea")
                        .WithMany()
                        .HasForeignKey("CompanhiaAereaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanhiaAerea");
                });

            modelBuilder.Entity("SistemaIntercambioFinal.Models.CadastroIntercambio", b =>
                {
                    b.HasOne("SistemaIntercambioFinal.Models.DestinoIntercambio", "DestinoIntercambio")
                        .WithMany()
                        .HasForeignKey("DestinoIntercambioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaIntercambioFinal.Models.DuracaoIntercambio", "DuracaoIntercambio")
                        .WithMany()
                        .HasForeignKey("DuracaoIntercambioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaIntercambioFinal.Models.TipoIntercambio", "TipoIntercambio")
                        .WithMany()
                        .HasForeignKey("TipoIntercambioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestinoIntercambio");

                    b.Navigation("DuracaoIntercambio");

                    b.Navigation("TipoIntercambio");
                });
#pragma warning restore 612, 618
        }
    }
}
